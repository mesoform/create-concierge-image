FROM {{ base_img_name | default(default_base_img_name) }}

# Add some labels
LABEL maintainer="{{ img_maintainer }}"
LABEL description="{{ img_description }}"
LABEL com.mesoform.baseimage={{ is_base_image | default(default_is_base_image) }}
LABEL com.joyent.autopilotpattern={{ on_autopilot | default(default_on_autopilot) }}
LABEL com.mesoform.builddate="{{ date }}"
LABEL com.mesoform.baseimage.ver="{{ base_img_name | default(default_base_img_name) }}"
LABEL com.docker.img.ver="{{ img_name }}"
{% if labels is defined %}
{% for label in labels %}
LABEL {{ label }}
{% endfor %}
{% endif %}

# Set some environment variables
ENV DOCKER_IMG_VER="{{ img_name }}"
ENV DNS_DOMAIN={{ dns_domain }}
{% if consul_as_agent | lower == true %}
ENV CONSUL_AGENT={{ consul_as_agent }}
{% if consul_version is defined %}
ENV CONSUL_VERSION={{ consul_version }}
ENV CONSUL_CHECKSUM={{ consul_checksum }}
{% endif %}
{% else %}
RUN unset CONSUL_AGENT
{% endif %}
ENV LOG_LEVEL="{{ log_level | default(default_log_level) }}"
ENV LOG_FORMAT="{{ log_format | default(default_log_format) }}"
{% if command is defined %}
ENV COMMAND="{{ command }}"
{% endif %}
{% if container_vars is defined %}
{% for env in container_vars %}
ENV {{ env }}
{% endfor %}
{% endif %}

{% if build_args is defined %}
# Set some build arguments
{% for arg in build_args %}
ARG {{ arg }}
{% endfor %}
{% endif %}
{% if work_dir is defined %}


# Set application working directory.
WORKDIR {{ work_dir }}
{% endif %}
{% if is_base_image | default(default_is_base_image) == true %}


# true should be lowercase http://jinja.pocoo.org/docs/2.9/templates/
COPY etc /etc/
COPY bin /usr/local/bin/
RUN chmod -R +x /usr/local/bin/
ONBUILD COPY etc /etc/
ONBUILD COPY bin /usr/local/bin/
ONBUILD RUN chmod -R +x /usr/local/bin/
{% endif %}
{% if additional_directories.matched > 0 %}


# Add user-defined directories beyond default bin and etc
{% for dir in additional_directories.files %}
COPY {{ dir.path | basename }} /{{ dir.path | basename }}/
{% endfor %}
{% endif %}
{% if install_scripts is defined %}


# If we have any install scripts, run them.
{% for script in install_scripts %}
RUN chmod -R +x {{ script }} && \
    sync && \
    {{ script }}
{% endfor %}
{% endif %}
{% if volumes is defined %}

# make directories
RUN mkdir -p {% for volume in volumes %}{{ volume }} {% endfor %}

# define volumes if set
VOLUME {% for volume in volumes %}{{ volume }} {% endfor %}
{% endif %}
{% if service_port is defined %}


# Expose primary service port
EXPOSE {{ service_port }}
{% endif %}
{% if ports is defined %}
# Expose additional container ports
EXPOSE {% for port in ports %}{{ port }} {% endfor %}
{% endif %}
{% if healthcheck is defined %}

HEALTHCHECK \
    --interval={{ healthcheck_interval | default(default_healthcheck_interval) }}s \
    --timeout={{ healthcheck_timeout | default(default_healthcheck_timeout) }}s \
    --retries={{ app_restarts | default(default_app_restarts) | int + 1 }} \
    CMD {{ healthcheck }}
{% endif %}
{% if entrypoint is defined %}


# Generally for creating base images or testing. Otherwise entrypoint should
# already be set to containerpilot
ENTRYPOINT [ {{ entrypoint }} ]
{% endif %}
